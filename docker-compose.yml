version: '3'
services:
  db:
    image: "postgres:15"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: "sondb"
      POSTGRES_USER: "son_owner"
      POSTGRES_PASSWORD: "Ih123hhsdt1nxxjg314C"
      POSTGRES_HOST_AUTH_METHOD: "trust"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    networks:
      - son-net

  api:
    build:
      context: .
      dockerfile: ./son.Dockerfile
    container_name: api
    depends_on:
      db:
        condition: service_healthy
    environment:
      CONFIG: compose
    ports:
      - "8086:8086"
      - "39901:39901"
    networks:
      - son-net

  init:
    build:
      context: .
      dockerfile: ./cli.Dockerfile
    container_name: cli
    depends_on:
      db:
        condition: service_healthy
      api:
        condition: service_started
    environment:
      CONFIG: compose
    networks:
      - son-net

  prometheus:
    image: quay.io/prometheus/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - "./infrastructure/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
    networks:
      - son-net

  grafana:
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    restart: unless-stopped
    volumes:
      - "./infrastructure/grafana/grafana.ds.yml:/etc/grafana/provisioning/datasources/grafana.ds.yml"
      - "./infrastructure/grafana/local.yml:/etc/grafana/provisioning/dashboards/local.yml"
      - "./infrastructure/grafana/go_process_dashboard.json:/var/lib/grafana/dashboards/go_process_dashboard.json"
      - "./infrastructure/grafana/son-dashboard.json:/var/lib/grafana/dashboards/son-dashboard.json"
      - "grafana-data:/var/lib/grafana"
    networks:
      - son-net


volumes:
  son-data:
  grafana-data:

networks:
  son-net: